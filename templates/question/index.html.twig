{% extends 'front.html.twig' %}

{% block body %}

	{% block content %}
		<style>
			.btn-animation {
				transition: transform 0.3s ease-in-out;
			}

			.btn-animation:hover {
				transform: translateY(-5px);
			}

			.form-control-textarea {
				height: 200px;
				resize: vertical;
			}

			.is-valid {
				background-color: #d4edda;
				border-color: #c3e6cb;
			}

			.is-invalid {
				background-color: #f8d7da;
				border-color: #f5c6cb;
			}
		</style>

		<div class="container" style="margin-top: 1%">
			<h1 class="mb-4">Ask Nexus members...</h1>

			<div class="card">
				<div class="card-body">
					{{ form_start(questionForm, {'attr': {'class': 'needs-validation'}}) }}

					<div class="form-group">
						{{ form_label(questionForm.titreQ, 'Title') }}
						{{ form_widget(questionForm.titreQ, {'attr': {'class': 'form-control', 'placeholder': 'Enter the title', 'required': 'required'}}) }}
						<div class="valid-feedback">
							Looks good!
						</div>
						<div class="invalid-feedback">
							Please provide a title.
						</div>
					</div>

					<div class="form-group">
						{{ form_label(questionForm.contenuQ, 'Content') }}
						{{ form_widget(questionForm.contenuQ, {'attr': {'class': 'form-control form-control-textarea', 'placeholder': 'Enter the content', 'required': 'required'}}) }}
						<div class="valid-feedback">
							Looks good!
						</div>
						<div class="invalid-feedback">
							Please provide content.
						</div>
					</div>

					<div class="form-group">
						{{ form_label(questionForm.typeQ, 'Type') }}
						{{ form_widget(questionForm.typeQ, {'attr': {'class': 'form-control', 'required': 'required'}}) }}
						<div class="valid-feedback">
							Looks good!
						</div>
						<div class="invalid-feedback">
							Please select a type.
						</div>
					</div>
					<button  id="notificationButton" type="submit" class="btn btn-primary btn-animation">Create</button>
						<script>
function handleConfirmation(event, message, title, successNotification) {
  var confirmResult = confirm(message);
  
  if (!confirmResult) {
    event.preventDefault();
    return;
  }

  if (!("Notification" in window)) {
    console.log('Notifications are not supported in this browser');
    return;
  }

  Notification.requestPermission().then(function(permission) {
    if (permission === "granted") {
      var notification = new Notification(title, {
        body: successNotification,
        icon: "path/to/notification-icon.png"
      });
    } else {
      console.log('Notification permission denied');
    }
  });
}

// Usage example for the "modifier" button
var modifierButton = document.getElementById('notificationButton');
modifierButton.addEventListener('click', function(event) {
  handleConfirmation(event, 'Are you sure you want to Add a question?', 'Addition Confirmation', 'You have successfully Added a question');
});


</script>
					{{ form_end(questionForm) }}
				</div>
			</div>
		</div>
	{% endblock %}
{% endblock %}

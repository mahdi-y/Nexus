{% extends 'front.html.twig' %}

{% block body %}
	{% block content %}
		<div class="container">
			<h1 class="mt-4 mb-4">Edit Question</h1>

			<div class="card">
				<div class="card-body">
					{{ form_start(questionForm, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
					<div class="form-group">
						{{ form_label(questionForm.titreQ, 'Title') }}
						{{ form_widget(questionForm.titreQ, {'attr': {'class': 'form-control', 'required': 'required'}}) }}
						<div class="invalid-feedback">
							Please provide a title for the question.
						</div>
					</div>

					<div class="form-group">
						{{ form_label(questionForm.contenuQ, 'Content') }}
						{{ form_widget(questionForm.contenuQ, {'attr': {'class': 'form-control', 'rows': '5', 'required': 'required'}}) }}
						<div class="invalid-feedback">
							Please provide the content of the question.
						</div>
					</div>

					<div class="form-group">
						{{ form_label(questionForm.typeQ, 'Type') }}
						{{ form_widget(questionForm.typeQ, {'attr': {'class': 'form-control', 'required': 'required'}}) }}
						<div class="invalid-feedback">
							Please select a type for the question.
						</div>
					</div>

					<button type="submit" class="btn btn-primary" id="notificationButton">Update Question</button>
					{{ form_end(questionForm) }}
				</div>
			</div>
		</div>

		<script>
			// Bootstrap validation
(function () {
'use strict';
window.addEventListener('load', function () {
var forms = document.getElementsByClassName('needs-validation');
var validation = Array.prototype.filter.call(forms, function (form) {
form.addEventListener('submit', function (event) {
if (form.checkValidity() === false) {
event.preventDefault();
event.stopPropagation();
}
form.classList.add('was-validated');
}, false);
});
}, false);
})();
		</script>
		<script>
function handleConfirmation(event, message, title, successNotification) {
  var confirmResult = confirm(message);
  
  if (!confirmResult) {
    event.preventDefault();
    return;
  }

  if (!("Notification" in window)) {
    console.log('Notifications are not supported in this browser');
    return;
  }

  Notification.requestPermission().then(function(permission) {
    if (permission === "granted") {
      var notification = new Notification(title, {
        body: successNotification,
        icon: "path/to/notification-icon.png"
      });
    } else {
      console.log('Notification permission denied');
    }
  });
}

// Usage example for the "modifier" button
var modifierButton = document.getElementById('notificationButton');
modifierButton.addEventListener('click', function(event) {
  handleConfirmation(event, 'Are you sure you want to modifiy a question?', 'Modification Confirmation', 'You have successfully Modified a question');
});


</script>
	{% endblock %}
{% endblock %}
